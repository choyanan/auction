# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      # - run: npm ci
      - name: step 1
        run: npm run test
      - name: step 2
        run: scripts/deploy.sh
      # # Runs a single command using the runners shell
      # - name: Notify slack
      #   if: failure()
      #   uses: rtCamp/action-slack-notify@master
      #   env:
      #     SLACK_CHANNEL: general
      #     SLACK_COLOR: "#FF0000"
      #     SLACK_ICON: https://github.com/rtCamp.png?size=48
      #     SLACK_MESSAGE: "test fail"
      #     SLACK_TITLE: Message
      #     SLACK_USERNAME: choyanan
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_BOT_TOKEN }}
      # # Runs a single command using the runners shell
      # - name: Notify slack
      #   if: success()
      #   uses: rtCamp/action-slack-notify@master
      #   env:
      #     SLACK_CHANNEL: general
      #     SLACK_COLOR: "#00FF00"
      #     SLACK_ICON: https://github.com/rtCamp.png?size=48
      #     SLACK_MESSAGE: "test success"
      #     SLACK_TITLE: Message
      #     SLACK_USERNAME: choyanan
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: good
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              username: 'action-slack',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: test fail,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()
